import { useRouter } from "next/router";
import React, { useState, useEffect } from "react";

import Head from "next/head";

import movieApi from "../../api/movieApi";
import SectionCategory from "../../components/Home/SectionCategory";

import { Pagination } from "antd";

export async function getServerSideProps({ params }) {
  const { keyword } = params;

  //all info movie
  const data = {
    searchKeyWord: { keyword },
    size: "50",
    sort: "",
    searchType: "",
  };
  const res = await movieApi.getSearchWithKeyWord(data);
  const dataSearch = res.data.data.searchResults;

  return {
    props: {
      dataSearch: dataSearch,
    },
  };
}

const SearchKeyword = (dataSearch) => {
  const router = useRouter();

  const [currentPage, setCurrentPage] = useState(1);
  const [pageSize] = useState(12);

  const handleInputSearch = (e) => {
    console.log(e.target.value);
    setKeyWord(e.target.value);
  };

  //   useEffect(() => {
  //     setData(dataSearch);
  //   }, [dataSearch]);

  const { keyword } = router.query;

  const indexOfLastIndex = currentPage * pageSize;
  const indexOfFirtsIndex = indexOfLastIndex - pageSize;

  const dataPage = dataSearch.dataSearch.slice(
    indexOfFirtsIndex,
    indexOfLastIndex
  );

  //   console.log(data.dataSearch);
  return (
    <>
      <Head>
        <title>Tìm kiếm từ khóa {keyword} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="" />
      </Head>
      <div className="bg-black">
        <div className="pt-[6rem] mx-auto max-w-[1200px] px-[15px] bg-black min-h-screen">
          {dataSearch.dataSearch.length === 0 ? (
            <div className="mt-[10px] text-lg text-primary font-bold">
              Kết quả tìm kiếm không có
            </div>
          ) : (
            <SectionCategory
              title={`Kết quả tìm kiếm: ${keyword} `}
              data={dataPage}
              className="!grid-cols-6 !mt-[1rem]"
            />
          )}

          {dataSearch.dataSearch.length > pageSize ? (
            <Pagination
              current={currentPage}
              onChange={(page) => {
                setCurrentPage(page);
              }}
              pageSize={pageSize}
              total={dataSearch.dataSearch.length}
              className="pt-[1rem] !text-primary pb-[3rem] text-center"
            />
          ) : (
            ""
          )}
        </div>
      </div>
    </>
  );
};

export default SearchKeyword;
